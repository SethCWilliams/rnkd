"""Initial database schema

Revision ID: a6786ce03b1b
Revises: 
Create Date: 2025-07-01 13:02:15.092141

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a6786ce03b1b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('invite_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_invite_code'), 'groups', ['invite_code'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('profile_image_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('group_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_users_id'), 'group_users', ['id'], unique=False)
    op.create_table('movie_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('group', 'personal', name='listtypeenum'), nullable=False),
    sa.Column('media_type', sa.Enum('movie', 'book', 'game', name='mediatypeenum'), nullable=False),
    sa.Column('status', sa.Enum('open', 'voting', 'closed', name='liststatusenum'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movie_lists_id'), 'movie_lists', ['id'], unique=False)
    op.create_table('movie_list_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_list_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('item_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movie_list_items_id'), 'movie_list_items', ['id'], unique=False)
    op.create_table('elo_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_list_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('movie_list_item_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_lists.id'], ),
    sa.ForeignKeyConstraint(['movie_list_item_id'], ['movie_list_items.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_elo_scores_id'), 'elo_scores', ['id'], unique=False)
    op.create_table('matchups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_list_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('item_a_id', sa.Integer(), nullable=True),
    sa.Column('item_b_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_a_id'], ['movie_list_items.id'], ),
    sa.ForeignKeyConstraint(['item_b_id'], ['movie_list_items.id'], ),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_lists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['movie_list_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matchups_id'), 'matchups', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_matchups_id'), table_name='matchups')
    op.drop_table('matchups')
    op.drop_index(op.f('ix_elo_scores_id'), table_name='elo_scores')
    op.drop_table('elo_scores')
    op.drop_index(op.f('ix_movie_list_items_id'), table_name='movie_list_items')
    op.drop_table('movie_list_items')
    op.drop_index(op.f('ix_movie_lists_id'), table_name='movie_lists')
    op.drop_table('movie_lists')
    op.drop_index(op.f('ix_group_users_id'), table_name='group_users')
    op.drop_table('group_users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_groups_invite_code'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    # ### end Alembic commands ###
