"""add password_hash to users table

Revision ID: 31b14d07b637
Revises: a6786ce03b1b
Create Date: 2025-07-10 04:31:25.599547

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31b14d07b637'
down_revision: Union[str, None] = 'a6786ce03b1b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add password_hash column as nullable first
    op.add_column('users', sa.Column('password_hash', sa.String(), nullable=True))
    
    # Update existing users with a default password hash for demo purposes
    # In production, you would handle this differently (e.g., force password reset)
    from passlib.context import CryptContext
    pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
    default_password_hash = pwd_context.hash("password123")
    
    # Update existing users
    op.execute(f"UPDATE users SET password_hash = '{default_password_hash}' WHERE password_hash IS NULL")
    
    # Now make the column non-nullable
    op.alter_column('users', 'password_hash', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'password_hash')
    # ### end Alembic commands ###
